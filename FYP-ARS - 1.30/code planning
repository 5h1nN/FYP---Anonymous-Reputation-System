Dear Profs, 

Below is the short overview of how I can go about implementing the different signing key that the Journalist can use. There are some things that I need to add to the protocol so as to facilitate this and I am not sure any of these additional information will lead to any possible attacks hence will like to seek your advice. The ones in bold is the additional stuff that I added in respect to the original protocol.  

Initial Submission 
Whistleblower will submit his/her report without any token.
The blind message is generated based on one of the public key.
Blind Message (BM)  = [h(r) * (b ^ e1)] mod n , where (e1, n) is the public key set
In addition to the report and blind signature, the set number of the public key will also be transmitted to the Journalist. This allows the Journalist to know which Private key to be used to perform the signing. 

The following data will be transmitted to the Journal 
 (report, BM, PK_set_no*)

The following information is stored in the local machine as cookie (which is fetched during the unblinding script so that user do not need to manually type in)
random nonce r 
random blinding factor b 
PK_set_no 

Signing of the blind message without any token
Upon receiving the data, it will check if a token has been submitted together with the report. As this is the first time the whistleblower is submitting the report, there is no token attached together with the report. In this case, the blind message will be signed by a level 1 private key. 
Once the report is read through by the Journalist, the Journalist can choose to allocate the level of trust. The allocation of trust is given by informing which set of public key that the whistleblower should sign on for his subsequent report. At the same time, the server will maintain a database of records.
|Token|Submitted public key number|Level of trust|Public key set to be used next| 
The signing of the blind message remains unchanged.
Signed Blind Message (SBM)  
= [[h(r) * (b ^ e1)]^d1] mod n
= [(h(r) ^ d1) *b] mod n, where (d1, n) is the private key set

Unblinding of the Signed Blinded Message
The unblinding process remains unchanged except that the whistleblower will need to get the public key set number. This information can then be fetched from the local cookie together with the r and b. 
Once a Signed Blinded Message is unblind and a token is obtained, the value of r, token and the next public key set number will be stored in a new cookie called prev_r, token and PK_set_no respectively. 

Subsequently submission 
When the whistleblower access the reporting page through the same browser, the field for token and the PK set will be filled according.
When the whistleblower submits a report with a token, he/she does not need to submit the PK_set_no. The following data will be transmitted in submission with token. 
(report, BM, prev_r, token)
When the Journalist receives the submission with the token, the system (used by the Journalist) will automatically search in the database for the level of trust based on the token. Based on the level of trust, the system fetch the corresponding private key that is used to check the validity of the token. Once that is done, the system will display the records in a table sorted according to the level of the token in descending order.
After reading through the newly submitted report, the Journalist can choose a new level of trust and the following data will be recorded in the database similar to before. 
 |Token|Submitted public key number|Level of trust|Public key set to be used next|

----------------------------------------------------------------------------------------------------------------------
Example (Flow)
1. WB visit the whistleblower.php for the first time. 
	Onload(): 
	1. add content of all prev_r cookie into the prev_r dropdown menu 
	2. add content of all token cookie into the token dropdown menu 

	onchange() - prev_r:
	1. call getTokenBasedOnPrev_r(prev_r) and set the value of token field 
	2. call getPublicKeyBasedOnPrev_r(prev_r) and set the value of public_key field

	onchange() - token:
	1. call getPrev_rBasedOnToken(token) and set the value of prev_r field 
	2. call getPublicKeyBasedOnPrev_r(token) and set the value of public_key field

WB enters report and clicks on the "Submit" button. 
	OnClick():
	1. Get prev_r;
	2. Get token; 
	3. Get r;
	4. Get b; 
	5. Get pubkey;
	6. Get n;
	7. Computer BM = h(r)*(b^pubkey) mod n
	8. send(report, BM, prev_r, token);

2. Journalist (System) receives the report and check if the token is valid. 
Issue: Unable to validate that the token is valid. Since the validation is done via JS and doing it on the dataMgr will reveal the private key.

	OnReceive():
	1. if origin == whistleblower.html
	2. Check if $_POST(prev_r) == "" || $_POST(token) == ""
	   a. if true, 
	        insert into report values(report, BM, "", "", 1);
	   b. else, 
	      prev_level = select prev_level_of_trust from articles where token likes $_POST(token);
	      pubkey = select pubkey from key where key_set_no likes prev_level;
	      compute h(prev_r)^d and checks if it matches the token:
	      if true:
			select level_of_trust from articles where token likes $_POST(token);
	      	insert into report values(report, BM, token, prev_r, level_of_trust);
	      else:
	      	insert into report values(report, BM, "", "", 1);

In this case, there is no token submitted, hence the level of trust is set to 1. The information is then stored in the report database in the following format:

Report database
|REPORT|BM|TOKEN|PREV_R|LEVEL_OF_TRUST|
|report|BM|     |      |1             |

3. When the Journalist wishes to vie the list of report, the system will get all the data stored in the report database and display them in descending order according to the level of trust 
	Onload():
	1. reports [] = select REPORT, LEVEL_OF_TRUST from report ordered by level_of_trust desc
    2. foreach report in reports 
        create DOM;
        
Journalist.php
|Content|BM|Token|Prev_r|Level of trust|Approve/Disapprove|
|report |BM|     |      | 1            |level 5           |
|       |  |     |      |              |level 4           |
|       |  |     |      |              |level 3           |
|       |  |     |      |              |level 2           |
|       |  |     |      |              |level 1           |
|       |  |     |      |              |Delete            |

4. When the Journalist approves the report, he/she clicks on the respective button (Level 1 to 5) [Lets say level 3 in this case]. Afterwhich, the system will get the corresponding private key based on the current level of trust (in this case level 2) and compute the signed blind message private key. The signed blind message together with the specified level of trusted is then saved into the database. 

When the Journalist approve the report, he/she clicks on the respective button (Level 1 to 5) [Lets say level 2 in this case]. After the system will compute the signed blind message with the level 1 private key and saved the level into the database. The following is saved to the article database.

The signed blind message + PK_set_no + level of trusted + previous level of trust is then saved into the database. 

Article database 
|Signed Blinded Message|PK_set_no|Level of trust|Previous level of trust|
|SBM                   |2        |2             |1                      |

5. When the WhistleBlower wishes to get the token, he/she will visit the article.php which contain the list of signed blinded messsage. The r, b and pk_set_no value will then be fetched from the cookie and filled in automatically. Whistleblower will only need to click on the "Get Token" button to obtain the token.

Articles.php
|Signed Blinded Message (token)|Level of trust|
|SBM                   		   | 2            |

How the "Get token" works ?
Whistleblower select the set of r,b and pk_set_no from the dropdown menu and clicks on the "Get Token" button 
> JavaScript perform the unblinding (refer to formula 3) and returns the valid token 
> save the value of cookie - r and cookie - pk_set_no to cookie - prev_r and cookie - prev_pk_set_no* 
> save the public key no to pk_set_no 
> save the value of the token in the cookie - token

6. When the Whistleblower wishes to submit a report with a token, he/she can choose the respective set of token and prev_r send with. The public key will be set to value of cookie - pk_set_no. After the whistleblower enters in all the data and clicks on the submit button, the blinded message will be computed based on the current pk_set_no. Afterwhich, the value of r and b will be stored as cookie. 
WB submits (report, BM, token, prev_r)

7. When the Journalist system receives the report, it will first look at the article database based to the token and get the of previous level of trust. Next, based on the previous level of trust, it will get the corresponding private key. Afterwhich, it will checks if the token is valid (refer to formula 4). If it matches, the report will be inserted into the report database together with the level of trust. 

Report database
|report|BM|Token|Prev_r|Level of trust|
|report|BM|token|prev_r|2             |

Formula 4: compute h(prev_r)^d and checks if it matches the token 

8. Similarly, when the Journalist wishes to vie the list of report, the system will get all the data stored in the report database and display them in descending order according to the level of trust 

Journalist.php
|Content|BM|Token|Prev_r|Level of trust|Approve/Disapprove|
|report |BM|Token|prev_r|2             |level 5           |
|       |  |     |      |              |level 4           |
|       |  |     |      |              |level 3           |
|       |  |     |      |              |level 2           |
|       |  |     |      |              |level 1           |
|       |  |     |      |              |Delete            |

9. When the Journalist approves the report, he/she clicks on the respective button (Level 1 to 5) [Lets say level 3 in this case]. Afterwhich, the system will get the corresponding private key based on the current level of trust (in this case level 2) and compute the signed blind message private key. 

The signed blind message + PK_set_no + level of trusted + previous level of trust is then saved into the database. 

Article database 
|Signed Blinded Message|PK_set_no|Level of trust|Previous level of trust|
|SBM                   |3        |3             |2                      |

10. When the WhistleBlower wishes to get the token, he/she will visit the article.php which contain the list of signed blinded messsage. The r, b and pk_set_no value will then be fetched from the cookie and filled in automatically. Whistleblower will only need to click on the "Get Token" button to obtain the token.

Articles.php
|Signed Blinded Message|PK_set_no|
|SBM                   |3        |

